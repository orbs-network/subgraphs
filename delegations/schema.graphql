type ContractRegistryAddressUpdated @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Delegated @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegatedStakeChanged @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  selfDelegatedStake: BigInt! # uint256
  delegatedStake: BigInt! # uint256
  delegator: Bytes! # address
  delegatorContributedStake: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegationInitialized @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

#type DelegationsImported @entity(immutable: true) {
#  id: Bytes!
#  from: [Bytes!]! # address[]
#  to: Bytes! # address
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

type InitializationComplete @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Locked @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RegistryManagementTransferred @entity(immutable: true) {
  id: Bytes!
  previousRegistryAdmin: Bytes! # address
  newRegistryAdmin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unlocked @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Delegator @entity {
  id: Bytes!
  lastChangeBlock: BigInt!
  lastChangeTime: BigInt!
  address: Bytes!
  stake: BigInt!
  nonStake: BigInt!
}

type DelegatorMap @entity {
  id: Bytes!
  delegator: Delegator!
}

type DelegateActions @entity(immutable: true) {
  id: String!
  lastChangeBlock: BigInt!
  lastChangeTime: BigInt!
  address: Bytes!
  stake: BigInt!
  nonStake: BigInt
}

type DelegationStakes @entity {
  id: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  selfStake: BigInt!
  delegatedStake: BigInt!
  totalStake: BigInt!
  nDelegates: BigInt!
}

type GuardianInfo @entity {
  id: Bytes!
  delegatorMap: DelegatorMap
  delegationStake: [DelegationStakes!]
  delegateActions: [DelegateActions!]
  nDelegates: BigInt!
}

type GuardianToDelegators @entity {
  id: String!
  delegators: [String!]!
}

type DelegatorToGuardian @entity {
  id: String!
  guardian: String!
}