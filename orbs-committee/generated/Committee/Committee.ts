// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CommitteeChange extends ethereum.Event {
  get params(): CommitteeChange__Params {
    return new CommitteeChange__Params(this);
  }
}

export class CommitteeChange__Params {
  _event: CommitteeChange;

  constructor(event: CommitteeChange) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get weight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get certification(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get inCommittee(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class CommitteeSnapshot extends ethereum.Event {
  get params(): CommitteeSnapshot__Params {
    return new CommitteeSnapshot__Params(this);
  }
}

export class CommitteeSnapshot__Params {
  _event: CommitteeSnapshot;

  constructor(event: CommitteeSnapshot) {
    this._event = event;
  }

  get addrs(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get weights(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get certification(): Array<boolean> {
    return this._event.parameters[2].value.toBooleanArray();
  }
}

export class ContractRegistryAddressUpdated extends ethereum.Event {
  get params(): ContractRegistryAddressUpdated__Params {
    return new ContractRegistryAddressUpdated__Params(this);
  }
}

export class ContractRegistryAddressUpdated__Params {
  _event: ContractRegistryAddressUpdated;

  constructor(event: ContractRegistryAddressUpdated) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InitializationComplete extends ethereum.Event {
  get params(): InitializationComplete__Params {
    return new InitializationComplete__Params(this);
  }
}

export class InitializationComplete__Params {
  _event: InitializationComplete;

  constructor(event: InitializationComplete) {
    this._event = event;
  }
}

export class Locked extends ethereum.Event {
  get params(): Locked__Params {
    return new Locked__Params(this);
  }
}

export class Locked__Params {
  _event: Locked;

  constructor(event: Locked) {
    this._event = event;
  }
}

export class MaxCommitteeSizeChanged extends ethereum.Event {
  get params(): MaxCommitteeSizeChanged__Params {
    return new MaxCommitteeSizeChanged__Params(this);
  }
}

export class MaxCommitteeSizeChanged__Params {
  _event: MaxCommitteeSizeChanged;

  constructor(event: MaxCommitteeSizeChanged) {
    this._event = event;
  }

  get newValue(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get oldValue(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class RegistryManagementTransferred extends ethereum.Event {
  get params(): RegistryManagementTransferred__Params {
    return new RegistryManagementTransferred__Params(this);
  }
}

export class RegistryManagementTransferred__Params {
  _event: RegistryManagementTransferred;

  constructor(event: RegistryManagementTransferred) {
    this._event = event;
  }

  get previousRegistryAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRegistryAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unlocked extends ethereum.Event {
  get params(): Unlocked__Params {
    return new Unlocked__Params(this);
  }
}

export class Unlocked__Params {
  _event: Unlocked;

  constructor(event: Unlocked) {
    this._event = event;
  }
}

export class Committee__getCommitteeResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<boolean>;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<boolean>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromBooleanArray(this.value2));
    return map;
  }

  getAddrs(): Array<Address> {
    return this.value0;
  }

  getWeights(): Array<BigInt> {
    return this.value1;
  }

  getCertification(): Array<boolean> {
    return this.value2;
  }
}

export class Committee__getCommitteeStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getGeneralCommitteeSize(): BigInt {
    return this.value0;
  }

  getCertifiedCommitteeSize(): BigInt {
    return this.value1;
  }

  getTotalWeight(): BigInt {
    return this.value2;
  }
}

export class Committee__getMemberInfoResult {
  value0: boolean;
  value1: BigInt;
  value2: boolean;
  value3: BigInt;

  constructor(
    value0: boolean,
    value1: BigInt,
    value2: boolean,
    value3: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getInCommittee(): boolean {
    return this.value0;
  }

  getWeight(): BigInt {
    return this.value1;
  }

  getIsCertified(): boolean {
    return this.value2;
  }

  getTotalCommitteeWeight(): BigInt {
    return this.value3;
  }
}

export class Committee__membersStatusResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPos(): BigInt {
    return this.value0;
  }

  getInCommittee(): boolean {
    return this.value1;
  }
}

export class Committee__removeMemberResult {
  value0: boolean;
  value1: BigInt;
  value2: boolean;

  constructor(value0: boolean, value1: BigInt, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }

  getMemberRemoved(): boolean {
    return this.value0;
  }

  getRemovedMemberWeight(): BigInt {
    return this.value1;
  }

  getRemovedMemberCertified(): boolean {
    return this.value2;
  }
}

export class Committee extends ethereum.SmartContract {
  static bind(address: Address): Committee {
    return new Committee("Committee", address);
  }

  addMember(addr: Address, weight: BigInt, isCertified: boolean): boolean {
    let result = super.call(
      "addMember",
      "addMember(address,uint256,bool):(bool)",
      [
        ethereum.Value.fromAddress(addr),
        ethereum.Value.fromUnsignedBigInt(weight),
        ethereum.Value.fromBoolean(isCertified),
      ],
    );

    return result[0].toBoolean();
  }

  try_addMember(
    addr: Address,
    weight: BigInt,
    isCertified: boolean,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addMember",
      "addMember(address,uint256,bool):(bool)",
      [
        ethereum.Value.fromAddress(addr),
        ethereum.Value.fromUnsignedBigInt(weight),
        ethereum.Value.fromBoolean(isCertified),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkAddMember(addr: Address, weight: BigInt): boolean {
    let result = super.call(
      "checkAddMember",
      "checkAddMember(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(addr),
        ethereum.Value.fromUnsignedBigInt(weight),
      ],
    );

    return result[0].toBoolean();
  }

  try_checkAddMember(
    addr: Address,
    weight: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkAddMember",
      "checkAddMember(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(addr),
        ethereum.Value.fromUnsignedBigInt(weight),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCommittee(): Committee__getCommitteeResult {
    let result = super.call(
      "getCommittee",
      "getCommittee():(address[],uint256[],bool[])",
      [],
    );

    return new Committee__getCommitteeResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toBooleanArray(),
    );
  }

  try_getCommittee(): ethereum.CallResult<Committee__getCommitteeResult> {
    let result = super.tryCall(
      "getCommittee",
      "getCommittee():(address[],uint256[],bool[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Committee__getCommitteeResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toBooleanArray(),
      ),
    );
  }

  getCommitteeStats(): Committee__getCommitteeStatsResult {
    let result = super.call(
      "getCommitteeStats",
      "getCommitteeStats():(uint256,uint256,uint256)",
      [],
    );

    return new Committee__getCommitteeStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_getCommitteeStats(): ethereum.CallResult<Committee__getCommitteeStatsResult> {
    let result = super.tryCall(
      "getCommitteeStats",
      "getCommitteeStats():(uint256,uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Committee__getCommitteeStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  getContractRegistry(): Address {
    let result = super.call(
      "getContractRegistry",
      "getContractRegistry():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getContractRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getContractRegistry",
      "getContractRegistry():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMaxCommitteeSize(): i32 {
    let result = super.call(
      "getMaxCommitteeSize",
      "getMaxCommitteeSize():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_getMaxCommitteeSize(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getMaxCommitteeSize",
      "getMaxCommitteeSize():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getMemberInfo(addr: Address): Committee__getMemberInfoResult {
    let result = super.call(
      "getMemberInfo",
      "getMemberInfo(address):(bool,uint256,bool,uint256)",
      [ethereum.Value.fromAddress(addr)],
    );

    return new Committee__getMemberInfoResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toBigInt(),
    );
  }

  try_getMemberInfo(
    addr: Address,
  ): ethereum.CallResult<Committee__getMemberInfoResult> {
    let result = super.tryCall(
      "getMemberInfo",
      "getMemberInfo(address):(bool,uint256,bool,uint256)",
      [ethereum.Value.fromAddress(addr)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Committee__getMemberInfoResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toBigInt(),
      ),
    );
  }

  initializationAdmin(): Address {
    let result = super.call(
      "initializationAdmin",
      "initializationAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_initializationAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "initializationAdmin",
      "initializationAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isInitializationComplete(): boolean {
    let result = super.call(
      "isInitializationComplete",
      "isInitializationComplete():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_isInitializationComplete(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInitializationComplete",
      "isInitializationComplete():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLocked(): boolean {
    let result = super.call("isLocked", "isLocked():(bool)", []);

    return result[0].toBoolean();
  }

  try_isLocked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLocked", "isLocked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistryAdmin(): boolean {
    let result = super.call("isRegistryAdmin", "isRegistryAdmin():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRegistryAdmin(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRegistryAdmin",
      "isRegistryAdmin():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  locked(): boolean {
    let result = super.call("locked", "locked():(bool)", []);

    return result[0].toBoolean();
  }

  try_locked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("locked", "locked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  membersStatus(param0: Address): Committee__membersStatusResult {
    let result = super.call(
      "membersStatus",
      "membersStatus(address):(uint32,bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new Committee__membersStatusResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try_membersStatus(
    param0: Address,
  ): ethereum.CallResult<Committee__membersStatusResult> {
    let result = super.tryCall(
      "membersStatus",
      "membersStatus(address):(uint32,bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Committee__membersStatusResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
      ),
    );
  }

  pendingRegistryAdmin(): Address {
    let result = super.call(
      "pendingRegistryAdmin",
      "pendingRegistryAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_pendingRegistryAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingRegistryAdmin",
      "pendingRegistryAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registryAdmin(): Address {
    let result = super.call("registryAdmin", "registryAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_registryAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registryAdmin",
      "registryAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  removeMember(addr: Address): Committee__removeMemberResult {
    let result = super.call(
      "removeMember",
      "removeMember(address):(bool,uint256,bool)",
      [ethereum.Value.fromAddress(addr)],
    );

    return new Committee__removeMemberResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBoolean(),
    );
  }

  try_removeMember(
    addr: Address,
  ): ethereum.CallResult<Committee__removeMemberResult> {
    let result = super.tryCall(
      "removeMember",
      "removeMember(address):(bool,uint256,bool)",
      [ethereum.Value.fromAddress(addr)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Committee__removeMemberResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBoolean(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _contractRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _registryAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _maxCommitteeSize(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMemberCall extends ethereum.Call {
  get inputs(): AddMemberCall__Inputs {
    return new AddMemberCall__Inputs(this);
  }

  get outputs(): AddMemberCall__Outputs {
    return new AddMemberCall__Outputs(this);
  }
}

export class AddMemberCall__Inputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get weight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get isCertified(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class AddMemberCall__Outputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get memberAdded(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ClaimRegistryManagementCall extends ethereum.Call {
  get inputs(): ClaimRegistryManagementCall__Inputs {
    return new ClaimRegistryManagementCall__Inputs(this);
  }

  get outputs(): ClaimRegistryManagementCall__Outputs {
    return new ClaimRegistryManagementCall__Outputs(this);
  }
}

export class ClaimRegistryManagementCall__Inputs {
  _call: ClaimRegistryManagementCall;

  constructor(call: ClaimRegistryManagementCall) {
    this._call = call;
  }
}

export class ClaimRegistryManagementCall__Outputs {
  _call: ClaimRegistryManagementCall;

  constructor(call: ClaimRegistryManagementCall) {
    this._call = call;
  }
}

export class EmitCommitteeSnapshotCall extends ethereum.Call {
  get inputs(): EmitCommitteeSnapshotCall__Inputs {
    return new EmitCommitteeSnapshotCall__Inputs(this);
  }

  get outputs(): EmitCommitteeSnapshotCall__Outputs {
    return new EmitCommitteeSnapshotCall__Outputs(this);
  }
}

export class EmitCommitteeSnapshotCall__Inputs {
  _call: EmitCommitteeSnapshotCall;

  constructor(call: EmitCommitteeSnapshotCall) {
    this._call = call;
  }
}

export class EmitCommitteeSnapshotCall__Outputs {
  _call: EmitCommitteeSnapshotCall;

  constructor(call: EmitCommitteeSnapshotCall) {
    this._call = call;
  }
}

export class ImportMembersCall extends ethereum.Call {
  get inputs(): ImportMembersCall__Inputs {
    return new ImportMembersCall__Inputs(this);
  }

  get outputs(): ImportMembersCall__Outputs {
    return new ImportMembersCall__Outputs(this);
  }
}

export class ImportMembersCall__Inputs {
  _call: ImportMembersCall;

  constructor(call: ImportMembersCall) {
    this._call = call;
  }

  get previousCommitteeContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ImportMembersCall__Outputs {
  _call: ImportMembersCall;

  constructor(call: ImportMembersCall) {
    this._call = call;
  }
}

export class InitializationCompleteCall extends ethereum.Call {
  get inputs(): InitializationCompleteCall__Inputs {
    return new InitializationCompleteCall__Inputs(this);
  }

  get outputs(): InitializationCompleteCall__Outputs {
    return new InitializationCompleteCall__Outputs(this);
  }
}

export class InitializationCompleteCall__Inputs {
  _call: InitializationCompleteCall;

  constructor(call: InitializationCompleteCall) {
    this._call = call;
  }
}

export class InitializationCompleteCall__Outputs {
  _call: InitializationCompleteCall;

  constructor(call: InitializationCompleteCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class MemberCertificationChangeCall extends ethereum.Call {
  get inputs(): MemberCertificationChangeCall__Inputs {
    return new MemberCertificationChangeCall__Inputs(this);
  }

  get outputs(): MemberCertificationChangeCall__Outputs {
    return new MemberCertificationChangeCall__Outputs(this);
  }
}

export class MemberCertificationChangeCall__Inputs {
  _call: MemberCertificationChangeCall;

  constructor(call: MemberCertificationChangeCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isCertified(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class MemberCertificationChangeCall__Outputs {
  _call: MemberCertificationChangeCall;

  constructor(call: MemberCertificationChangeCall) {
    this._call = call;
  }
}

export class MemberWeightChangeCall extends ethereum.Call {
  get inputs(): MemberWeightChangeCall__Inputs {
    return new MemberWeightChangeCall__Inputs(this);
  }

  get outputs(): MemberWeightChangeCall__Outputs {
    return new MemberWeightChangeCall__Outputs(this);
  }
}

export class MemberWeightChangeCall__Inputs {
  _call: MemberWeightChangeCall;

  constructor(call: MemberWeightChangeCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get weight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MemberWeightChangeCall__Outputs {
  _call: MemberWeightChangeCall;

  constructor(call: MemberWeightChangeCall) {
    this._call = call;
  }
}

export class RefreshContractsCall extends ethereum.Call {
  get inputs(): RefreshContractsCall__Inputs {
    return new RefreshContractsCall__Inputs(this);
  }

  get outputs(): RefreshContractsCall__Outputs {
    return new RefreshContractsCall__Outputs(this);
  }
}

export class RefreshContractsCall__Inputs {
  _call: RefreshContractsCall;

  constructor(call: RefreshContractsCall) {
    this._call = call;
  }
}

export class RefreshContractsCall__Outputs {
  _call: RefreshContractsCall;

  constructor(call: RefreshContractsCall) {
    this._call = call;
  }
}

export class RemoveMemberCall extends ethereum.Call {
  get inputs(): RemoveMemberCall__Inputs {
    return new RemoveMemberCall__Inputs(this);
  }

  get outputs(): RemoveMemberCall__Outputs {
    return new RemoveMemberCall__Outputs(this);
  }
}

export class RemoveMemberCall__Inputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveMemberCall__Outputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get memberRemoved(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get removedMemberWeight(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get removedMemberCertified(): boolean {
    return this._call.outputValues[2].value.toBoolean();
  }
}

export class RenounceRegistryManagementCall extends ethereum.Call {
  get inputs(): RenounceRegistryManagementCall__Inputs {
    return new RenounceRegistryManagementCall__Inputs(this);
  }

  get outputs(): RenounceRegistryManagementCall__Outputs {
    return new RenounceRegistryManagementCall__Outputs(this);
  }
}

export class RenounceRegistryManagementCall__Inputs {
  _call: RenounceRegistryManagementCall;

  constructor(call: RenounceRegistryManagementCall) {
    this._call = call;
  }
}

export class RenounceRegistryManagementCall__Outputs {
  _call: RenounceRegistryManagementCall;

  constructor(call: RenounceRegistryManagementCall) {
    this._call = call;
  }
}

export class SetContractRegistryCall extends ethereum.Call {
  get inputs(): SetContractRegistryCall__Inputs {
    return new SetContractRegistryCall__Inputs(this);
  }

  get outputs(): SetContractRegistryCall__Outputs {
    return new SetContractRegistryCall__Outputs(this);
  }
}

export class SetContractRegistryCall__Inputs {
  _call: SetContractRegistryCall;

  constructor(call: SetContractRegistryCall) {
    this._call = call;
  }

  get newContractRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetContractRegistryCall__Outputs {
  _call: SetContractRegistryCall;

  constructor(call: SetContractRegistryCall) {
    this._call = call;
  }
}

export class SetMaxCommitteeSizeCall extends ethereum.Call {
  get inputs(): SetMaxCommitteeSizeCall__Inputs {
    return new SetMaxCommitteeSizeCall__Inputs(this);
  }

  get outputs(): SetMaxCommitteeSizeCall__Outputs {
    return new SetMaxCommitteeSizeCall__Outputs(this);
  }
}

export class SetMaxCommitteeSizeCall__Inputs {
  _call: SetMaxCommitteeSizeCall;

  constructor(call: SetMaxCommitteeSizeCall) {
    this._call = call;
  }

  get _maxCommitteeSize(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMaxCommitteeSizeCall__Outputs {
  _call: SetMaxCommitteeSizeCall;

  constructor(call: SetMaxCommitteeSizeCall) {
    this._call = call;
  }
}

export class SetRegistryAdminCall extends ethereum.Call {
  get inputs(): SetRegistryAdminCall__Inputs {
    return new SetRegistryAdminCall__Inputs(this);
  }

  get outputs(): SetRegistryAdminCall__Outputs {
    return new SetRegistryAdminCall__Outputs(this);
  }
}

export class SetRegistryAdminCall__Inputs {
  _call: SetRegistryAdminCall;

  constructor(call: SetRegistryAdminCall) {
    this._call = call;
  }

  get _registryAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRegistryAdminCall__Outputs {
  _call: SetRegistryAdminCall;

  constructor(call: SetRegistryAdminCall) {
    this._call = call;
  }
}

export class TransferRegistryManagementCall extends ethereum.Call {
  get inputs(): TransferRegistryManagementCall__Inputs {
    return new TransferRegistryManagementCall__Inputs(this);
  }

  get outputs(): TransferRegistryManagementCall__Outputs {
    return new TransferRegistryManagementCall__Outputs(this);
  }
}

export class TransferRegistryManagementCall__Inputs {
  _call: TransferRegistryManagementCall;

  constructor(call: TransferRegistryManagementCall) {
    this._call = call;
  }

  get newRegistryAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferRegistryManagementCall__Outputs {
  _call: TransferRegistryManagementCall;

  constructor(call: TransferRegistryManagementCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}
