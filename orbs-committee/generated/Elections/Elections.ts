// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ContractRegistryAddressUpdated extends ethereum.Event {
  get params(): ContractRegistryAddressUpdated__Params {
    return new ContractRegistryAddressUpdated__Params(this);
  }
}

export class ContractRegistryAddressUpdated__Params {
  _event: ContractRegistryAddressUpdated;

  constructor(event: ContractRegistryAddressUpdated) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GuardianStatusUpdated extends ethereum.Event {
  get params(): GuardianStatusUpdated__Params {
    return new GuardianStatusUpdated__Params(this);
  }
}

export class GuardianStatusUpdated__Params {
  _event: GuardianStatusUpdated;

  constructor(event: GuardianStatusUpdated) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get readyToSync(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get readyForCommittee(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class GuardianVotedOut extends ethereum.Event {
  get params(): GuardianVotedOut__Params {
    return new GuardianVotedOut__Params(this);
  }
}

export class GuardianVotedOut__Params {
  _event: GuardianVotedOut;

  constructor(event: GuardianVotedOut) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GuardianVotedUnready extends ethereum.Event {
  get params(): GuardianVotedUnready__Params {
    return new GuardianVotedUnready__Params(this);
  }
}

export class GuardianVotedUnready__Params {
  _event: GuardianVotedUnready;

  constructor(event: GuardianVotedUnready) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InitializationComplete extends ethereum.Event {
  get params(): InitializationComplete__Params {
    return new InitializationComplete__Params(this);
  }
}

export class InitializationComplete__Params {
  _event: InitializationComplete;

  constructor(event: InitializationComplete) {
    this._event = event;
  }
}

export class Locked extends ethereum.Event {
  get params(): Locked__Params {
    return new Locked__Params(this);
  }
}

export class Locked__Params {
  _event: Locked;

  constructor(event: Locked) {
    this._event = event;
  }
}

export class MinSelfStakePercentMilleChanged extends ethereum.Event {
  get params(): MinSelfStakePercentMilleChanged__Params {
    return new MinSelfStakePercentMilleChanged__Params(this);
  }
}

export class MinSelfStakePercentMilleChanged__Params {
  _event: MinSelfStakePercentMilleChanged;

  constructor(event: MinSelfStakePercentMilleChanged) {
    this._event = event;
  }

  get newValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RegistryManagementTransferred extends ethereum.Event {
  get params(): RegistryManagementTransferred__Params {
    return new RegistryManagementTransferred__Params(this);
  }
}

export class RegistryManagementTransferred__Params {
  _event: RegistryManagementTransferred;

  constructor(event: RegistryManagementTransferred) {
    this._event = event;
  }

  get previousRegistryAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRegistryAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StakeChanged extends ethereum.Event {
  get params(): StakeChanged__Params {
    return new StakeChanged__Params(this);
  }
}

export class StakeChanged__Params {
  _event: StakeChanged;

  constructor(event: StakeChanged) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get selfDelegatedStake(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get delegatedStake(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get effectiveStake(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unlocked extends ethereum.Event {
  get params(): Unlocked__Params {
    return new Unlocked__Params(this);
  }
}

export class Unlocked__Params {
  _event: Unlocked;

  constructor(event: Unlocked) {
    this._event = event;
  }
}

export class VoteOutCasted extends ethereum.Event {
  get params(): VoteOutCasted__Params {
    return new VoteOutCasted__Params(this);
  }
}

export class VoteOutCasted__Params {
  _event: VoteOutCasted;

  constructor(event: VoteOutCasted) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subject(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VoteOutPercentMilleThresholdChanged extends ethereum.Event {
  get params(): VoteOutPercentMilleThresholdChanged__Params {
    return new VoteOutPercentMilleThresholdChanged__Params(this);
  }
}

export class VoteOutPercentMilleThresholdChanged__Params {
  _event: VoteOutPercentMilleThresholdChanged;

  constructor(event: VoteOutPercentMilleThresholdChanged) {
    this._event = event;
  }

  get newValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoteUnreadyCasted extends ethereum.Event {
  get params(): VoteUnreadyCasted__Params {
    return new VoteUnreadyCasted__Params(this);
  }
}

export class VoteUnreadyCasted__Params {
  _event: VoteUnreadyCasted;

  constructor(event: VoteUnreadyCasted) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subject(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get expiration(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class VoteUnreadyPercentMilleThresholdChanged extends ethereum.Event {
  get params(): VoteUnreadyPercentMilleThresholdChanged__Params {
    return new VoteUnreadyPercentMilleThresholdChanged__Params(this);
  }
}

export class VoteUnreadyPercentMilleThresholdChanged__Params {
  _event: VoteUnreadyPercentMilleThresholdChanged;

  constructor(event: VoteUnreadyPercentMilleThresholdChanged) {
    this._event = event;
  }

  get newValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoteUnreadyTimeoutSecondsChanged extends ethereum.Event {
  get params(): VoteUnreadyTimeoutSecondsChanged__Params {
    return new VoteUnreadyTimeoutSecondsChanged__Params(this);
  }
}

export class VoteUnreadyTimeoutSecondsChanged__Params {
  _event: VoteUnreadyTimeoutSecondsChanged;

  constructor(event: VoteUnreadyTimeoutSecondsChanged) {
    this._event = event;
  }

  get newValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Elections__getCommitteeResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<Address>;
  value3: Array<boolean>;
  value4: Array<Bytes>;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<Address>,
    value3: Array<boolean>,
    value4: Array<Bytes>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromAddressArray(this.value2));
    map.set("value3", ethereum.Value.fromBooleanArray(this.value3));
    map.set("value4", ethereum.Value.fromFixedBytesArray(this.value4));
    return map;
  }

  getCommittee(): Array<Address> {
    return this.value0;
  }

  getWeights(): Array<BigInt> {
    return this.value1;
  }

  getOrbsAddrs(): Array<Address> {
    return this.value2;
  }

  getCertification(): Array<boolean> {
    return this.value3;
  }

  getIps(): Array<Bytes> {
    return this.value4;
  }
}

export class Elections__getSettingsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getMinSelfStakePercentMille(): BigInt {
    return this.value0;
  }

  getVoteUnreadyPercentMilleThreshold(): BigInt {
    return this.value1;
  }

  getVoteOutPercentMilleThreshold(): BigInt {
    return this.value2;
  }
}

export class Elections__getVoteOutStatusResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: boolean, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getVotedOut(): boolean {
    return this.value0;
  }

  getVotedStake(): BigInt {
    return this.value1;
  }

  getTotalDelegatedStake(): BigInt {
    return this.value2;
  }
}

export class Elections__getVoteUnreadyStatusResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<boolean>;
  value3: Array<boolean>;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<boolean>,
    value3: Array<boolean>,
    value4: boolean,
    value5: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromBooleanArray(this.value2));
    map.set("value3", ethereum.Value.fromBooleanArray(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getCommittee(): Array<Address> {
    return this.value0;
  }

  getWeights(): Array<BigInt> {
    return this.value1;
  }

  getCertification(): Array<boolean> {
    return this.value2;
  }

  getVotes(): Array<boolean> {
    return this.value3;
  }

  getSubjectInCommittee(): boolean {
    return this.value4;
  }

  getSubjectInCertifiedCommittee(): boolean {
    return this.value5;
  }
}

export class Elections__getVoteUnreadyVoteResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValid(): boolean {
    return this.value0;
  }

  getExpiration(): BigInt {
    return this.value1;
  }
}

export class Elections extends ethereum.SmartContract {
  static bind(address: Address): Elections {
    return new Elections("Elections", address);
  }

  canJoinCommittee(guardian: Address): boolean {
    let result = super.call(
      "canJoinCommittee",
      "canJoinCommittee(address):(bool)",
      [ethereum.Value.fromAddress(guardian)],
    );

    return result[0].toBoolean();
  }

  try_canJoinCommittee(guardian: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canJoinCommittee",
      "canJoinCommittee(address):(bool)",
      [ethereum.Value.fromAddress(guardian)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCommittee(): Elections__getCommitteeResult {
    let result = super.call(
      "getCommittee",
      "getCommittee():(address[],uint256[],address[],bool[],bytes4[])",
      [],
    );

    return new Elections__getCommitteeResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toAddressArray(),
      result[3].toBooleanArray(),
      result[4].toBytesArray(),
    );
  }

  try_getCommittee(): ethereum.CallResult<Elections__getCommitteeResult> {
    let result = super.tryCall(
      "getCommittee",
      "getCommittee():(address[],uint256[],address[],bool[],bytes4[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Elections__getCommitteeResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toAddressArray(),
        value[3].toBooleanArray(),
        value[4].toBytesArray(),
      ),
    );
  }

  getContractRegistry(): Address {
    let result = super.call(
      "getContractRegistry",
      "getContractRegistry():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getContractRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getContractRegistry",
      "getContractRegistry():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getEffectiveStake(guardian: Address): BigInt {
    let result = super.call(
      "getEffectiveStake",
      "getEffectiveStake(address):(uint256)",
      [ethereum.Value.fromAddress(guardian)],
    );

    return result[0].toBigInt();
  }

  try_getEffectiveStake(guardian: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEffectiveStake",
      "getEffectiveStake(address):(uint256)",
      [ethereum.Value.fromAddress(guardian)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinSelfStakePercentMille(): BigInt {
    let result = super.call(
      "getMinSelfStakePercentMille",
      "getMinSelfStakePercentMille():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getMinSelfStakePercentMille(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMinSelfStakePercentMille",
      "getMinSelfStakePercentMille():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSettings(): Elections__getSettingsResult {
    let result = super.call(
      "getSettings",
      "getSettings():(uint32,uint32,uint32)",
      [],
    );

    return new Elections__getSettingsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_getSettings(): ethereum.CallResult<Elections__getSettingsResult> {
    let result = super.tryCall(
      "getSettings",
      "getSettings():(uint32,uint32,uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Elections__getSettingsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  getVoteOutPercentMilleThreshold(): BigInt {
    let result = super.call(
      "getVoteOutPercentMilleThreshold",
      "getVoteOutPercentMilleThreshold():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getVoteOutPercentMilleThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVoteOutPercentMilleThreshold",
      "getVoteOutPercentMilleThreshold():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVoteOutStatus(subject: Address): Elections__getVoteOutStatusResult {
    let result = super.call(
      "getVoteOutStatus",
      "getVoteOutStatus(address):(bool,uint256,uint256)",
      [ethereum.Value.fromAddress(subject)],
    );

    return new Elections__getVoteOutStatusResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_getVoteOutStatus(
    subject: Address,
  ): ethereum.CallResult<Elections__getVoteOutStatusResult> {
    let result = super.tryCall(
      "getVoteOutStatus",
      "getVoteOutStatus(address):(bool,uint256,uint256)",
      [ethereum.Value.fromAddress(subject)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Elections__getVoteOutStatusResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  getVoteOutVote(voter: Address): Address {
    let result = super.call(
      "getVoteOutVote",
      "getVoteOutVote(address):(address)",
      [ethereum.Value.fromAddress(voter)],
    );

    return result[0].toAddress();
  }

  try_getVoteOutVote(voter: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getVoteOutVote",
      "getVoteOutVote(address):(address)",
      [ethereum.Value.fromAddress(voter)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVoteUnreadyPercentMilleThreshold(): BigInt {
    let result = super.call(
      "getVoteUnreadyPercentMilleThreshold",
      "getVoteUnreadyPercentMilleThreshold():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getVoteUnreadyPercentMilleThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVoteUnreadyPercentMilleThreshold",
      "getVoteUnreadyPercentMilleThreshold():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVoteUnreadyStatus(
    subject: Address,
  ): Elections__getVoteUnreadyStatusResult {
    let result = super.call(
      "getVoteUnreadyStatus",
      "getVoteUnreadyStatus(address):(address[],uint256[],bool[],bool[],bool,bool)",
      [ethereum.Value.fromAddress(subject)],
    );

    return new Elections__getVoteUnreadyStatusResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toBooleanArray(),
      result[3].toBooleanArray(),
      result[4].toBoolean(),
      result[5].toBoolean(),
    );
  }

  try_getVoteUnreadyStatus(
    subject: Address,
  ): ethereum.CallResult<Elections__getVoteUnreadyStatusResult> {
    let result = super.tryCall(
      "getVoteUnreadyStatus",
      "getVoteUnreadyStatus(address):(address[],uint256[],bool[],bool[],bool,bool)",
      [ethereum.Value.fromAddress(subject)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Elections__getVoteUnreadyStatusResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toBooleanArray(),
        value[3].toBooleanArray(),
        value[4].toBoolean(),
        value[5].toBoolean(),
      ),
    );
  }

  getVoteUnreadyVote(
    voter: Address,
    subject: Address,
  ): Elections__getVoteUnreadyVoteResult {
    let result = super.call(
      "getVoteUnreadyVote",
      "getVoteUnreadyVote(address,address):(bool,uint256)",
      [ethereum.Value.fromAddress(voter), ethereum.Value.fromAddress(subject)],
    );

    return new Elections__getVoteUnreadyVoteResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
    );
  }

  try_getVoteUnreadyVote(
    voter: Address,
    subject: Address,
  ): ethereum.CallResult<Elections__getVoteUnreadyVoteResult> {
    let result = super.tryCall(
      "getVoteUnreadyVote",
      "getVoteUnreadyVote(address,address):(bool,uint256)",
      [ethereum.Value.fromAddress(voter), ethereum.Value.fromAddress(subject)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Elections__getVoteUnreadyVoteResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
      ),
    );
  }

  initializationAdmin(): Address {
    let result = super.call(
      "initializationAdmin",
      "initializationAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_initializationAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "initializationAdmin",
      "initializationAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isInitializationComplete(): boolean {
    let result = super.call(
      "isInitializationComplete",
      "isInitializationComplete():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_isInitializationComplete(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInitializationComplete",
      "isInitializationComplete():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLocked(): boolean {
    let result = super.call("isLocked", "isLocked():(bool)", []);

    return result[0].toBoolean();
  }

  try_isLocked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLocked", "isLocked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistryAdmin(): boolean {
    let result = super.call("isRegistryAdmin", "isRegistryAdmin():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRegistryAdmin(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRegistryAdmin",
      "isRegistryAdmin():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  locked(): boolean {
    let result = super.call("locked", "locked():(bool)", []);

    return result[0].toBoolean();
  }

  try_locked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("locked", "locked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingRegistryAdmin(): Address {
    let result = super.call(
      "pendingRegistryAdmin",
      "pendingRegistryAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_pendingRegistryAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingRegistryAdmin",
      "pendingRegistryAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registryAdmin(): Address {
    let result = super.call("registryAdmin", "registryAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_registryAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registryAdmin",
      "registryAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  votersStake(param0: Address): BigInt {
    let result = super.call("votersStake", "votersStake(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_votersStake(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "votersStake",
      "votersStake(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _contractRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _registryAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get minSelfStakePercentMille(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get voteUnreadyPercentMilleThreshold(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get voteOutPercentMilleThreshold(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimRegistryManagementCall extends ethereum.Call {
  get inputs(): ClaimRegistryManagementCall__Inputs {
    return new ClaimRegistryManagementCall__Inputs(this);
  }

  get outputs(): ClaimRegistryManagementCall__Outputs {
    return new ClaimRegistryManagementCall__Outputs(this);
  }
}

export class ClaimRegistryManagementCall__Inputs {
  _call: ClaimRegistryManagementCall;

  constructor(call: ClaimRegistryManagementCall) {
    this._call = call;
  }
}

export class ClaimRegistryManagementCall__Outputs {
  _call: ClaimRegistryManagementCall;

  constructor(call: ClaimRegistryManagementCall) {
    this._call = call;
  }
}

export class DelegatedStakeChangeCall extends ethereum.Call {
  get inputs(): DelegatedStakeChangeCall__Inputs {
    return new DelegatedStakeChangeCall__Inputs(this);
  }

  get outputs(): DelegatedStakeChangeCall__Outputs {
    return new DelegatedStakeChangeCall__Outputs(this);
  }
}

export class DelegatedStakeChangeCall__Inputs {
  _call: DelegatedStakeChangeCall;

  constructor(call: DelegatedStakeChangeCall) {
    this._call = call;
  }

  get delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get selfDelegatedStake(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get delegatedStake(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalDelegatedStake(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DelegatedStakeChangeCall__Outputs {
  _call: DelegatedStakeChangeCall;

  constructor(call: DelegatedStakeChangeCall) {
    this._call = call;
  }
}

export class GuardianCertificationChangedCall extends ethereum.Call {
  get inputs(): GuardianCertificationChangedCall__Inputs {
    return new GuardianCertificationChangedCall__Inputs(this);
  }

  get outputs(): GuardianCertificationChangedCall__Outputs {
    return new GuardianCertificationChangedCall__Outputs(this);
  }
}

export class GuardianCertificationChangedCall__Inputs {
  _call: GuardianCertificationChangedCall;

  constructor(call: GuardianCertificationChangedCall) {
    this._call = call;
  }

  get guardian(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isCertified(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class GuardianCertificationChangedCall__Outputs {
  _call: GuardianCertificationChangedCall;

  constructor(call: GuardianCertificationChangedCall) {
    this._call = call;
  }
}

export class GuardianUnregisteredCall extends ethereum.Call {
  get inputs(): GuardianUnregisteredCall__Inputs {
    return new GuardianUnregisteredCall__Inputs(this);
  }

  get outputs(): GuardianUnregisteredCall__Outputs {
    return new GuardianUnregisteredCall__Outputs(this);
  }
}

export class GuardianUnregisteredCall__Inputs {
  _call: GuardianUnregisteredCall;

  constructor(call: GuardianUnregisteredCall) {
    this._call = call;
  }

  get guardian(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GuardianUnregisteredCall__Outputs {
  _call: GuardianUnregisteredCall;

  constructor(call: GuardianUnregisteredCall) {
    this._call = call;
  }
}

export class InitReadyForCommitteeCall extends ethereum.Call {
  get inputs(): InitReadyForCommitteeCall__Inputs {
    return new InitReadyForCommitteeCall__Inputs(this);
  }

  get outputs(): InitReadyForCommitteeCall__Outputs {
    return new InitReadyForCommitteeCall__Outputs(this);
  }
}

export class InitReadyForCommitteeCall__Inputs {
  _call: InitReadyForCommitteeCall;

  constructor(call: InitReadyForCommitteeCall) {
    this._call = call;
  }

  get guardians(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class InitReadyForCommitteeCall__Outputs {
  _call: InitReadyForCommitteeCall;

  constructor(call: InitReadyForCommitteeCall) {
    this._call = call;
  }
}

export class InitializationCompleteCall extends ethereum.Call {
  get inputs(): InitializationCompleteCall__Inputs {
    return new InitializationCompleteCall__Inputs(this);
  }

  get outputs(): InitializationCompleteCall__Outputs {
    return new InitializationCompleteCall__Outputs(this);
  }
}

export class InitializationCompleteCall__Inputs {
  _call: InitializationCompleteCall;

  constructor(call: InitializationCompleteCall) {
    this._call = call;
  }
}

export class InitializationCompleteCall__Outputs {
  _call: InitializationCompleteCall;

  constructor(call: InitializationCompleteCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class ReadyForCommitteeCall extends ethereum.Call {
  get inputs(): ReadyForCommitteeCall__Inputs {
    return new ReadyForCommitteeCall__Inputs(this);
  }

  get outputs(): ReadyForCommitteeCall__Outputs {
    return new ReadyForCommitteeCall__Outputs(this);
  }
}

export class ReadyForCommitteeCall__Inputs {
  _call: ReadyForCommitteeCall;

  constructor(call: ReadyForCommitteeCall) {
    this._call = call;
  }
}

export class ReadyForCommitteeCall__Outputs {
  _call: ReadyForCommitteeCall;

  constructor(call: ReadyForCommitteeCall) {
    this._call = call;
  }
}

export class ReadyToSyncCall extends ethereum.Call {
  get inputs(): ReadyToSyncCall__Inputs {
    return new ReadyToSyncCall__Inputs(this);
  }

  get outputs(): ReadyToSyncCall__Outputs {
    return new ReadyToSyncCall__Outputs(this);
  }
}

export class ReadyToSyncCall__Inputs {
  _call: ReadyToSyncCall;

  constructor(call: ReadyToSyncCall) {
    this._call = call;
  }
}

export class ReadyToSyncCall__Outputs {
  _call: ReadyToSyncCall;

  constructor(call: ReadyToSyncCall) {
    this._call = call;
  }
}

export class RefreshContractsCall extends ethereum.Call {
  get inputs(): RefreshContractsCall__Inputs {
    return new RefreshContractsCall__Inputs(this);
  }

  get outputs(): RefreshContractsCall__Outputs {
    return new RefreshContractsCall__Outputs(this);
  }
}

export class RefreshContractsCall__Inputs {
  _call: RefreshContractsCall;

  constructor(call: RefreshContractsCall) {
    this._call = call;
  }
}

export class RefreshContractsCall__Outputs {
  _call: RefreshContractsCall;

  constructor(call: RefreshContractsCall) {
    this._call = call;
  }
}

export class RenounceRegistryManagementCall extends ethereum.Call {
  get inputs(): RenounceRegistryManagementCall__Inputs {
    return new RenounceRegistryManagementCall__Inputs(this);
  }

  get outputs(): RenounceRegistryManagementCall__Outputs {
    return new RenounceRegistryManagementCall__Outputs(this);
  }
}

export class RenounceRegistryManagementCall__Inputs {
  _call: RenounceRegistryManagementCall;

  constructor(call: RenounceRegistryManagementCall) {
    this._call = call;
  }
}

export class RenounceRegistryManagementCall__Outputs {
  _call: RenounceRegistryManagementCall;

  constructor(call: RenounceRegistryManagementCall) {
    this._call = call;
  }
}

export class SetContractRegistryCall extends ethereum.Call {
  get inputs(): SetContractRegistryCall__Inputs {
    return new SetContractRegistryCall__Inputs(this);
  }

  get outputs(): SetContractRegistryCall__Outputs {
    return new SetContractRegistryCall__Outputs(this);
  }
}

export class SetContractRegistryCall__Inputs {
  _call: SetContractRegistryCall;

  constructor(call: SetContractRegistryCall) {
    this._call = call;
  }

  get newContractRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetContractRegistryCall__Outputs {
  _call: SetContractRegistryCall;

  constructor(call: SetContractRegistryCall) {
    this._call = call;
  }
}

export class SetMinSelfStakePercentMilleCall extends ethereum.Call {
  get inputs(): SetMinSelfStakePercentMilleCall__Inputs {
    return new SetMinSelfStakePercentMilleCall__Inputs(this);
  }

  get outputs(): SetMinSelfStakePercentMilleCall__Outputs {
    return new SetMinSelfStakePercentMilleCall__Outputs(this);
  }
}

export class SetMinSelfStakePercentMilleCall__Inputs {
  _call: SetMinSelfStakePercentMilleCall;

  constructor(call: SetMinSelfStakePercentMilleCall) {
    this._call = call;
  }

  get minSelfStakePercentMille(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinSelfStakePercentMilleCall__Outputs {
  _call: SetMinSelfStakePercentMilleCall;

  constructor(call: SetMinSelfStakePercentMilleCall) {
    this._call = call;
  }
}

export class SetRegistryAdminCall extends ethereum.Call {
  get inputs(): SetRegistryAdminCall__Inputs {
    return new SetRegistryAdminCall__Inputs(this);
  }

  get outputs(): SetRegistryAdminCall__Outputs {
    return new SetRegistryAdminCall__Outputs(this);
  }
}

export class SetRegistryAdminCall__Inputs {
  _call: SetRegistryAdminCall;

  constructor(call: SetRegistryAdminCall) {
    this._call = call;
  }

  get _registryAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRegistryAdminCall__Outputs {
  _call: SetRegistryAdminCall;

  constructor(call: SetRegistryAdminCall) {
    this._call = call;
  }
}

export class SetVoteOutPercentMilleThresholdCall extends ethereum.Call {
  get inputs(): SetVoteOutPercentMilleThresholdCall__Inputs {
    return new SetVoteOutPercentMilleThresholdCall__Inputs(this);
  }

  get outputs(): SetVoteOutPercentMilleThresholdCall__Outputs {
    return new SetVoteOutPercentMilleThresholdCall__Outputs(this);
  }
}

export class SetVoteOutPercentMilleThresholdCall__Inputs {
  _call: SetVoteOutPercentMilleThresholdCall;

  constructor(call: SetVoteOutPercentMilleThresholdCall) {
    this._call = call;
  }

  get voteOutPercentMilleThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetVoteOutPercentMilleThresholdCall__Outputs {
  _call: SetVoteOutPercentMilleThresholdCall;

  constructor(call: SetVoteOutPercentMilleThresholdCall) {
    this._call = call;
  }
}

export class SetVoteUnreadyPercentMilleThresholdCall extends ethereum.Call {
  get inputs(): SetVoteUnreadyPercentMilleThresholdCall__Inputs {
    return new SetVoteUnreadyPercentMilleThresholdCall__Inputs(this);
  }

  get outputs(): SetVoteUnreadyPercentMilleThresholdCall__Outputs {
    return new SetVoteUnreadyPercentMilleThresholdCall__Outputs(this);
  }
}

export class SetVoteUnreadyPercentMilleThresholdCall__Inputs {
  _call: SetVoteUnreadyPercentMilleThresholdCall;

  constructor(call: SetVoteUnreadyPercentMilleThresholdCall) {
    this._call = call;
  }

  get voteUnreadyPercentMilleThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetVoteUnreadyPercentMilleThresholdCall__Outputs {
  _call: SetVoteUnreadyPercentMilleThresholdCall;

  constructor(call: SetVoteUnreadyPercentMilleThresholdCall) {
    this._call = call;
  }
}

export class TransferRegistryManagementCall extends ethereum.Call {
  get inputs(): TransferRegistryManagementCall__Inputs {
    return new TransferRegistryManagementCall__Inputs(this);
  }

  get outputs(): TransferRegistryManagementCall__Outputs {
    return new TransferRegistryManagementCall__Outputs(this);
  }
}

export class TransferRegistryManagementCall__Inputs {
  _call: TransferRegistryManagementCall;

  constructor(call: TransferRegistryManagementCall) {
    this._call = call;
  }

  get newRegistryAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferRegistryManagementCall__Outputs {
  _call: TransferRegistryManagementCall;

  constructor(call: TransferRegistryManagementCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class VoteOutCall extends ethereum.Call {
  get inputs(): VoteOutCall__Inputs {
    return new VoteOutCall__Inputs(this);
  }

  get outputs(): VoteOutCall__Outputs {
    return new VoteOutCall__Outputs(this);
  }
}

export class VoteOutCall__Inputs {
  _call: VoteOutCall;

  constructor(call: VoteOutCall) {
    this._call = call;
  }

  get subject(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class VoteOutCall__Outputs {
  _call: VoteOutCall;

  constructor(call: VoteOutCall) {
    this._call = call;
  }
}

export class VoteUnreadyCall extends ethereum.Call {
  get inputs(): VoteUnreadyCall__Inputs {
    return new VoteUnreadyCall__Inputs(this);
  }

  get outputs(): VoteUnreadyCall__Outputs {
    return new VoteUnreadyCall__Outputs(this);
  }
}

export class VoteUnreadyCall__Inputs {
  _call: VoteUnreadyCall;

  constructor(call: VoteUnreadyCall) {
    this._call = call;
  }

  get subject(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get voteExpiration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class VoteUnreadyCall__Outputs {
  _call: VoteUnreadyCall;

  constructor(call: VoteUnreadyCall) {
    this._call = call;
  }
}
