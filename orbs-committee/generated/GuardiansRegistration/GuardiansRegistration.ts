// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ContractRegistryAddressUpdated extends ethereum.Event {
  get params(): ContractRegistryAddressUpdated__Params {
    return new ContractRegistryAddressUpdated__Params(this);
  }
}

export class ContractRegistryAddressUpdated__Params {
  _event: ContractRegistryAddressUpdated;

  constructor(event: ContractRegistryAddressUpdated) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GuardianDataUpdated extends ethereum.Event {
  get params(): GuardianDataUpdated__Params {
    return new GuardianDataUpdated__Params(this);
  }
}

export class GuardianDataUpdated__Params {
  _event: GuardianDataUpdated;

  constructor(event: GuardianDataUpdated) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isRegistered(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get ip(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get orbsAddr(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[4].value.toString();
  }

  get website(): string {
    return this._event.parameters[5].value.toString();
  }

  get registrationTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class GuardianMetadataChanged extends ethereum.Event {
  get params(): GuardianMetadataChanged__Params {
    return new GuardianMetadataChanged__Params(this);
  }
}

export class GuardianMetadataChanged__Params {
  _event: GuardianMetadataChanged;

  constructor(event: GuardianMetadataChanged) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get key(): string {
    return this._event.parameters[1].value.toString();
  }

  get newValue(): string {
    return this._event.parameters[2].value.toString();
  }

  get oldValue(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class GuardianRegistered extends ethereum.Event {
  get params(): GuardianRegistered__Params {
    return new GuardianRegistered__Params(this);
  }
}

export class GuardianRegistered__Params {
  _event: GuardianRegistered;

  constructor(event: GuardianRegistered) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GuardianUnregistered extends ethereum.Event {
  get params(): GuardianUnregistered__Params {
    return new GuardianUnregistered__Params(this);
  }
}

export class GuardianUnregistered__Params {
  _event: GuardianUnregistered;

  constructor(event: GuardianUnregistered) {
    this._event = event;
  }

  get guardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InitializationComplete extends ethereum.Event {
  get params(): InitializationComplete__Params {
    return new InitializationComplete__Params(this);
  }
}

export class InitializationComplete__Params {
  _event: InitializationComplete;

  constructor(event: InitializationComplete) {
    this._event = event;
  }
}

export class Locked extends ethereum.Event {
  get params(): Locked__Params {
    return new Locked__Params(this);
  }
}

export class Locked__Params {
  _event: Locked;

  constructor(event: Locked) {
    this._event = event;
  }
}

export class RegistryManagementTransferred extends ethereum.Event {
  get params(): RegistryManagementTransferred__Params {
    return new RegistryManagementTransferred__Params(this);
  }
}

export class RegistryManagementTransferred__Params {
  _event: RegistryManagementTransferred;

  constructor(event: RegistryManagementTransferred) {
    this._event = event;
  }

  get previousRegistryAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRegistryAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unlocked extends ethereum.Event {
  get params(): Unlocked__Params {
    return new Unlocked__Params(this);
  }
}

export class Unlocked__Params {
  _event: Unlocked;

  constructor(event: Unlocked) {
    this._event = event;
  }
}

export class GuardiansRegistration__getGuardianDataResult {
  value0: Bytes;
  value1: Address;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Bytes,
    value1: Address,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getIp(): Bytes {
    return this.value0;
  }

  getOrbsAddr(): Address {
    return this.value1;
  }

  getName(): string {
    return this.value2;
  }

  getWebsite(): string {
    return this.value3;
  }

  getRegistrationTime(): BigInt {
    return this.value4;
  }

  getLastUpdateTime(): BigInt {
    return this.value5;
  }
}

export class GuardiansRegistration extends ethereum.SmartContract {
  static bind(address: Address): GuardiansRegistration {
    return new GuardiansRegistration("GuardiansRegistration", address);
  }

  ID_FORM_URL_METADATA_KEY(): string {
    let result = super.call(
      "ID_FORM_URL_METADATA_KEY",
      "ID_FORM_URL_METADATA_KEY():(string)",
      [],
    );

    return result[0].toString();
  }

  try_ID_FORM_URL_METADATA_KEY(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ID_FORM_URL_METADATA_KEY",
      "ID_FORM_URL_METADATA_KEY():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getContractRegistry(): Address {
    let result = super.call(
      "getContractRegistry",
      "getContractRegistry():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getContractRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getContractRegistry",
      "getContractRegistry():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGuardianAddresses(orbsAddrs: Array<Address>): Array<Address> {
    let result = super.call(
      "getGuardianAddresses",
      "getGuardianAddresses(address[]):(address[])",
      [ethereum.Value.fromAddressArray(orbsAddrs)],
    );

    return result[0].toAddressArray();
  }

  try_getGuardianAddresses(
    orbsAddrs: Array<Address>,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getGuardianAddresses",
      "getGuardianAddresses(address[]):(address[])",
      [ethereum.Value.fromAddressArray(orbsAddrs)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getGuardianData(
    guardian: Address,
  ): GuardiansRegistration__getGuardianDataResult {
    let result = super.call(
      "getGuardianData",
      "getGuardianData(address):(bytes4,address,string,string,uint256,uint256)",
      [ethereum.Value.fromAddress(guardian)],
    );

    return new GuardiansRegistration__getGuardianDataResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_getGuardianData(
    guardian: Address,
  ): ethereum.CallResult<GuardiansRegistration__getGuardianDataResult> {
    let result = super.tryCall(
      "getGuardianData",
      "getGuardianData(address):(bytes4,address,string,string,uint256,uint256)",
      [ethereum.Value.fromAddress(guardian)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GuardiansRegistration__getGuardianDataResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }

  getGuardianIp(guardian: Address): Bytes {
    let result = super.call(
      "getGuardianIp",
      "getGuardianIp(address):(bytes4)",
      [ethereum.Value.fromAddress(guardian)],
    );

    return result[0].toBytes();
  }

  try_getGuardianIp(guardian: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getGuardianIp",
      "getGuardianIp(address):(bytes4)",
      [ethereum.Value.fromAddress(guardian)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getGuardianIps(guardianAddrs: Array<Address>): Array<Bytes> {
    let result = super.call(
      "getGuardianIps",
      "getGuardianIps(address[]):(bytes4[])",
      [ethereum.Value.fromAddressArray(guardianAddrs)],
    );

    return result[0].toBytesArray();
  }

  try_getGuardianIps(
    guardianAddrs: Array<Address>,
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getGuardianIps",
      "getGuardianIps(address[]):(bytes4[])",
      [ethereum.Value.fromAddressArray(guardianAddrs)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getGuardiansOrbsAddress(guardianAddrs: Array<Address>): Array<Address> {
    let result = super.call(
      "getGuardiansOrbsAddress",
      "getGuardiansOrbsAddress(address[]):(address[])",
      [ethereum.Value.fromAddressArray(guardianAddrs)],
    );

    return result[0].toAddressArray();
  }

  try_getGuardiansOrbsAddress(
    guardianAddrs: Array<Address>,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getGuardiansOrbsAddress",
      "getGuardiansOrbsAddress(address[]):(address[])",
      [ethereum.Value.fromAddressArray(guardianAddrs)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getMetadata(guardian: Address, key: string): string {
    let result = super.call(
      "getMetadata",
      "getMetadata(address,string):(string)",
      [ethereum.Value.fromAddress(guardian), ethereum.Value.fromString(key)],
    );

    return result[0].toString();
  }

  try_getMetadata(guardian: Address, key: string): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getMetadata",
      "getMetadata(address,string):(string)",
      [ethereum.Value.fromAddress(guardian), ethereum.Value.fromString(key)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  initializationAdmin(): Address {
    let result = super.call(
      "initializationAdmin",
      "initializationAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_initializationAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "initializationAdmin",
      "initializationAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ipToGuardian(param0: Bytes): Address {
    let result = super.call("ipToGuardian", "ipToGuardian(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(param0),
    ]);

    return result[0].toAddress();
  }

  try_ipToGuardian(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ipToGuardian",
      "ipToGuardian(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isInitializationComplete(): boolean {
    let result = super.call(
      "isInitializationComplete",
      "isInitializationComplete():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_isInitializationComplete(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInitializationComplete",
      "isInitializationComplete():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLocked(): boolean {
    let result = super.call("isLocked", "isLocked():(bool)", []);

    return result[0].toBoolean();
  }

  try_isLocked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLocked", "isLocked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistered(guardian: Address): boolean {
    let result = super.call("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(guardian),
    ]);

    return result[0].toBoolean();
  }

  try_isRegistered(guardian: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(guardian),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistryAdmin(): boolean {
    let result = super.call("isRegistryAdmin", "isRegistryAdmin():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRegistryAdmin(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRegistryAdmin",
      "isRegistryAdmin():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  locked(): boolean {
    let result = super.call("locked", "locked():(bool)", []);

    return result[0].toBoolean();
  }

  try_locked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("locked", "locked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingRegistryAdmin(): Address {
    let result = super.call(
      "pendingRegistryAdmin",
      "pendingRegistryAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_pendingRegistryAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingRegistryAdmin",
      "pendingRegistryAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registryAdmin(): Address {
    let result = super.call("registryAdmin", "registryAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_registryAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registryAdmin",
      "registryAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolveGuardianAddress(guardianOrOrbsAddress: Address): Address {
    let result = super.call(
      "resolveGuardianAddress",
      "resolveGuardianAddress(address):(address)",
      [ethereum.Value.fromAddress(guardianOrOrbsAddress)],
    );

    return result[0].toAddress();
  }

  try_resolveGuardianAddress(
    guardianOrOrbsAddress: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "resolveGuardianAddress",
      "resolveGuardianAddress(address):(address)",
      [ethereum.Value.fromAddress(guardianOrOrbsAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _contractRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _registryAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimRegistryManagementCall extends ethereum.Call {
  get inputs(): ClaimRegistryManagementCall__Inputs {
    return new ClaimRegistryManagementCall__Inputs(this);
  }

  get outputs(): ClaimRegistryManagementCall__Outputs {
    return new ClaimRegistryManagementCall__Outputs(this);
  }
}

export class ClaimRegistryManagementCall__Inputs {
  _call: ClaimRegistryManagementCall;

  constructor(call: ClaimRegistryManagementCall) {
    this._call = call;
  }
}

export class ClaimRegistryManagementCall__Outputs {
  _call: ClaimRegistryManagementCall;

  constructor(call: ClaimRegistryManagementCall) {
    this._call = call;
  }
}

export class InitializationCompleteCall extends ethereum.Call {
  get inputs(): InitializationCompleteCall__Inputs {
    return new InitializationCompleteCall__Inputs(this);
  }

  get outputs(): InitializationCompleteCall__Outputs {
    return new InitializationCompleteCall__Outputs(this);
  }
}

export class InitializationCompleteCall__Inputs {
  _call: InitializationCompleteCall;

  constructor(call: InitializationCompleteCall) {
    this._call = call;
  }
}

export class InitializationCompleteCall__Outputs {
  _call: InitializationCompleteCall;

  constructor(call: InitializationCompleteCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class MigrateGuardiansCall extends ethereum.Call {
  get inputs(): MigrateGuardiansCall__Inputs {
    return new MigrateGuardiansCall__Inputs(this);
  }

  get outputs(): MigrateGuardiansCall__Outputs {
    return new MigrateGuardiansCall__Outputs(this);
  }
}

export class MigrateGuardiansCall__Inputs {
  _call: MigrateGuardiansCall;

  constructor(call: MigrateGuardiansCall) {
    this._call = call;
  }

  get guardiansToMigrate(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get previousContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MigrateGuardiansCall__Outputs {
  _call: MigrateGuardiansCall;

  constructor(call: MigrateGuardiansCall) {
    this._call = call;
  }
}

export class RefreshContractsCall extends ethereum.Call {
  get inputs(): RefreshContractsCall__Inputs {
    return new RefreshContractsCall__Inputs(this);
  }

  get outputs(): RefreshContractsCall__Outputs {
    return new RefreshContractsCall__Outputs(this);
  }
}

export class RefreshContractsCall__Inputs {
  _call: RefreshContractsCall;

  constructor(call: RefreshContractsCall) {
    this._call = call;
  }
}

export class RefreshContractsCall__Outputs {
  _call: RefreshContractsCall;

  constructor(call: RefreshContractsCall) {
    this._call = call;
  }
}

export class RegisterGuardianCall extends ethereum.Call {
  get inputs(): RegisterGuardianCall__Inputs {
    return new RegisterGuardianCall__Inputs(this);
  }

  get outputs(): RegisterGuardianCall__Outputs {
    return new RegisterGuardianCall__Outputs(this);
  }
}

export class RegisterGuardianCall__Inputs {
  _call: RegisterGuardianCall;

  constructor(call: RegisterGuardianCall) {
    this._call = call;
  }

  get ip(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get orbsAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get website(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class RegisterGuardianCall__Outputs {
  _call: RegisterGuardianCall;

  constructor(call: RegisterGuardianCall) {
    this._call = call;
  }
}

export class RenounceRegistryManagementCall extends ethereum.Call {
  get inputs(): RenounceRegistryManagementCall__Inputs {
    return new RenounceRegistryManagementCall__Inputs(this);
  }

  get outputs(): RenounceRegistryManagementCall__Outputs {
    return new RenounceRegistryManagementCall__Outputs(this);
  }
}

export class RenounceRegistryManagementCall__Inputs {
  _call: RenounceRegistryManagementCall;

  constructor(call: RenounceRegistryManagementCall) {
    this._call = call;
  }
}

export class RenounceRegistryManagementCall__Outputs {
  _call: RenounceRegistryManagementCall;

  constructor(call: RenounceRegistryManagementCall) {
    this._call = call;
  }
}

export class SetContractRegistryCall extends ethereum.Call {
  get inputs(): SetContractRegistryCall__Inputs {
    return new SetContractRegistryCall__Inputs(this);
  }

  get outputs(): SetContractRegistryCall__Outputs {
    return new SetContractRegistryCall__Outputs(this);
  }
}

export class SetContractRegistryCall__Inputs {
  _call: SetContractRegistryCall;

  constructor(call: SetContractRegistryCall) {
    this._call = call;
  }

  get newContractRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetContractRegistryCall__Outputs {
  _call: SetContractRegistryCall;

  constructor(call: SetContractRegistryCall) {
    this._call = call;
  }
}

export class SetMetadataCall extends ethereum.Call {
  get inputs(): SetMetadataCall__Inputs {
    return new SetMetadataCall__Inputs(this);
  }

  get outputs(): SetMetadataCall__Outputs {
    return new SetMetadataCall__Outputs(this);
  }
}

export class SetMetadataCall__Inputs {
  _call: SetMetadataCall;

  constructor(call: SetMetadataCall) {
    this._call = call;
  }

  get key(): string {
    return this._call.inputValues[0].value.toString();
  }

  get value(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetMetadataCall__Outputs {
  _call: SetMetadataCall;

  constructor(call: SetMetadataCall) {
    this._call = call;
  }
}

export class SetRegistryAdminCall extends ethereum.Call {
  get inputs(): SetRegistryAdminCall__Inputs {
    return new SetRegistryAdminCall__Inputs(this);
  }

  get outputs(): SetRegistryAdminCall__Outputs {
    return new SetRegistryAdminCall__Outputs(this);
  }
}

export class SetRegistryAdminCall__Inputs {
  _call: SetRegistryAdminCall;

  constructor(call: SetRegistryAdminCall) {
    this._call = call;
  }

  get _registryAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRegistryAdminCall__Outputs {
  _call: SetRegistryAdminCall;

  constructor(call: SetRegistryAdminCall) {
    this._call = call;
  }
}

export class TransferRegistryManagementCall extends ethereum.Call {
  get inputs(): TransferRegistryManagementCall__Inputs {
    return new TransferRegistryManagementCall__Inputs(this);
  }

  get outputs(): TransferRegistryManagementCall__Outputs {
    return new TransferRegistryManagementCall__Outputs(this);
  }
}

export class TransferRegistryManagementCall__Inputs {
  _call: TransferRegistryManagementCall;

  constructor(call: TransferRegistryManagementCall) {
    this._call = call;
  }

  get newRegistryAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferRegistryManagementCall__Outputs {
  _call: TransferRegistryManagementCall;

  constructor(call: TransferRegistryManagementCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnregisterGuardianCall extends ethereum.Call {
  get inputs(): UnregisterGuardianCall__Inputs {
    return new UnregisterGuardianCall__Inputs(this);
  }

  get outputs(): UnregisterGuardianCall__Outputs {
    return new UnregisterGuardianCall__Outputs(this);
  }
}

export class UnregisterGuardianCall__Inputs {
  _call: UnregisterGuardianCall;

  constructor(call: UnregisterGuardianCall) {
    this._call = call;
  }
}

export class UnregisterGuardianCall__Outputs {
  _call: UnregisterGuardianCall;

  constructor(call: UnregisterGuardianCall) {
    this._call = call;
  }
}

export class UpdateGuardianCall extends ethereum.Call {
  get inputs(): UpdateGuardianCall__Inputs {
    return new UpdateGuardianCall__Inputs(this);
  }

  get outputs(): UpdateGuardianCall__Outputs {
    return new UpdateGuardianCall__Outputs(this);
  }
}

export class UpdateGuardianCall__Inputs {
  _call: UpdateGuardianCall;

  constructor(call: UpdateGuardianCall) {
    this._call = call;
  }

  get ip(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get orbsAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get website(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UpdateGuardianCall__Outputs {
  _call: UpdateGuardianCall;

  constructor(call: UpdateGuardianCall) {
    this._call = call;
  }
}

export class UpdateGuardianIpCall extends ethereum.Call {
  get inputs(): UpdateGuardianIpCall__Inputs {
    return new UpdateGuardianIpCall__Inputs(this);
  }

  get outputs(): UpdateGuardianIpCall__Outputs {
    return new UpdateGuardianIpCall__Outputs(this);
  }
}

export class UpdateGuardianIpCall__Inputs {
  _call: UpdateGuardianIpCall;

  constructor(call: UpdateGuardianIpCall) {
    this._call = call;
  }

  get ip(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UpdateGuardianIpCall__Outputs {
  _call: UpdateGuardianIpCall;

  constructor(call: UpdateGuardianIpCall) {
    this._call = call;
  }
}
