type CommitteeChange @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  weight: BigInt! # uint256
  certification: Boolean! # bool
  inCommittee: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommitteeSnapshot @entity(immutable: true) {
  id: Bytes!
  addrs: [Bytes!]! # address[]
  weights: [BigInt!]! # uint256[]
  certification: [Boolean!]! # bool[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractRegistryAddressUpdated @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InitializationComplete @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Locked @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MaxCommitteeSizeChanged @entity(immutable: true) {
  id: Bytes!
  newValue: Int! # uint8
  oldValue: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RegistryManagementTransferred @entity(immutable: true) {
  id: Bytes!
  previousRegistryAdmin: Bytes! # address
  newRegistryAdmin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unlocked @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractAddressUpdated @entity(immutable: true) {
  id: Bytes!
  contractName: String! # string
  addr: Bytes! # address
  managedContract: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractRegistryUpdated @entity(immutable: true) {
  id: Bytes!
  newContractRegistry: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

#type InitializationComplete @entity(immutable: true) {
#  id: Bytes!
#
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

type ManagerChanged @entity(immutable: true) {
  id: Bytes!
  role: String! # string
  newManager: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

#type RegistryManagementTransferred @entity(immutable: true) {
#  id: Bytes!
#  previousRegistryAdmin: Bytes! # address
#  newRegistryAdmin: Bytes! # address
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

#type ContractRegistryAddressUpdated @entity(immutable: true) {
#  id: Bytes!
#  addr: Bytes! # address
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

type GuardianStatusUpdated @entity(immutable: true) {
  id: Bytes!
  guardian: Bytes! # address
  readyToSync: Boolean! # bool
  readyForCommittee: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GuardianVotedOut @entity(immutable: true) {
  id: Bytes!
  guardian: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GuardianVotedUnready @entity(immutable: true) {
  id: Bytes!
  guardian: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

#type InitializationComplete @entity(immutable: true) {
#  id: Bytes!
#
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}
#
#type Locked @entity(immutable: true) {
#  id: Bytes!
#
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

type MinSelfStakePercentMilleChanged @entity(immutable: true) {
  id: Bytes!
  newValue: BigInt! # uint32
  oldValue: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

#type RegistryManagementTransferred @entity(immutable: true) {
#  id: Bytes!
#  previousRegistryAdmin: Bytes! # address
#  newRegistryAdmin: Bytes! # address
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

type StakeChanged @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  selfDelegatedStake: BigInt! # uint256
  delegatedStake: BigInt! # uint256
  effectiveStake: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

#type Unlocked @entity(immutable: true) {
#  id: Bytes!
#
#  blockNumber: BigInt!
#  blockTimestamp: BigInt!
#  transactionHash: Bytes!
#}

type VoteOutCasted @entity(immutable: true) {
  id: Bytes!
  voter: Bytes! # address
  subject: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteOutPercentMilleThresholdChanged @entity(immutable: true) {
  id: Bytes!
  newValue: BigInt! # uint32
  oldValue: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteUnreadyCasted @entity(immutable: true) {
  id: Bytes!
  voter: Bytes! # address
  subject: Bytes! # address
  expiration: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteUnreadyPercentMilleThresholdChanged @entity(immutable: true) {
  id: Bytes!
  newValue: BigInt! # uint32
  oldValue: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteUnreadyTimeoutSecondsChanged @entity(immutable: true) {
  id: Bytes!
  newValue: BigInt! # uint32
  oldValue: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
